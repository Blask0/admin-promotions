type Query {
  getAffiliates: [Affiliate]
  getBenefits: [Benefit]
  getCampaigns: ConditionList!
  getCategories: [ProductCategory]
  getCollections: [Collection!]
  getProducts(q: String!, page: Int = 1, itemsPerPage: Int = 10): PaginatedProducts
  getShippingTypes: [ShipppingType]
}

type Affiliate {
  id: ID!
  name: String
  salesChannel: String
  followUpEmail: String
  searchURIEndPoint: String
  searchURIEndpointAvailableVersions: [String]
  searchURIEndpointVersion: String
  useSellerPaymentMethod: Boolean
}

type Benefit {
  name: String!
  isActive: Boolean!
  campaigns: [Campaign]!
  effectType: String
}

type Campaign {
  name: String!
}

type Collection {
  id: ID!
  name: String
}

type Condition {
  conditionId: ID!
  expression: String!
  visualRepresentation: String
  description: String
  isEnabled: Boolean!
  isFeatured: Boolean!
  dateRange: DateRange
}

type ConditionList {
  conditionsLimit: Int!
  conditions: [Condition!]
  error: String
}

type DateRange {
  from: String
  to: String
}

type PaginatedProducts {
  products: [Product]
  pagination: Pagination
}

type Pagination {
  page: Int
  itemsPerPage: Int
  totalItems: Int
  totalPages: Int
}

type Product {
  id: ID!
  name: String
  detailUrl: String
  imageUrl: String
  skus: [Sku!]
}

type ProductCategory {
  id: ID!
  name: String
}

type ShipppingType {
  name: String
}

type Sku {
  id: ID!
  name: String
  isKit: Boolean
  kitItems: [String]
}
